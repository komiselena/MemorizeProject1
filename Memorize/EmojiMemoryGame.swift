//
//  EmojiMemoryGame.swift
//  Memorize
//
//  Created by Mac on 13.11.2023.
//




// –≠—Ç–æ View Model. –¢–æ —á—Ç–æ —Å–≤—è–∑—ã–≤–∞–µ—Ç Model c View.
import SwiftUI


class EmojiMemoryGame: ObservableObject{
    
    private static let Halloweenemojis = ["üëª", "üéÉ", "üï∑Ô∏è", "üßõ‚Äç‚ôÄÔ∏è", "üëΩ","üíÑ", "üò±", "ü•∑", "üßü‚Äç‚ôÇÔ∏è", "üï∏Ô∏è", "‚ö°Ô∏è"]
    
    private static let VehicleEmojis = ["üöå", "üöú", "üöó", "üõµ", "üõ∫", "üöï", "üöÄ", "üö¢", "üõ∏", "‚úàÔ∏è", "üöÅ"]
    
    private static let FruitEmojis = ["ü´ê", "üçí", "ü•ë", "üçë", "ü•≠", "üçç", "üçá", "ü••", "ü•ù", "üçì", "üçà"]
    
    private static let FlagsEmojis = ["üáßüá©", "üá¶üáπ", "üáßüá≤","üá®üá¶","üáªüá¨","üá∫üá≥","üá∑üá∫","üá∞üá∑","üá∑üá∏","üá¨üáß","üáπüá¥","üá±üá®","üá∏üá¨","üè¥‚Äç‚ò†Ô∏è"]
    
    private static let SportEmojis = ["üèÄ","‚öΩÔ∏è","üèà","‚öæÔ∏è","üèê","üèì","ü•å","üõπ","üèè","üé£","üèπ"]
    
    private static let AnimalEmojis = ["üê∂","üêê","ü¶ç","üêñ","üêº","ü¶Ñ","ü¶ã","üê£","ü™±","ü¶ñ","ü™º"]
    
    static let ThemeEmojis = [Halloweenemojis, VehicleEmojis, FruitEmojis, FlagsEmojis, SportEmojis, AnimalEmojis]
    // –¢—É—Ç —è —Å–¥–µ–ª–∞–ª–∞ –º–∞—Å—Å–∏–≤ —Å —Ç–µ–º–∞–º–∏ —ç–º–æ–¥–∑–∏
    
    func newGame(){
        let randomTheme: [String] = EmojiMemoryGame.ThemeEmojis.randomElement() ?? []
        self.model = EmojiMemoryGame.createMemoryGame(with: randomTheme)
        objectWillChange.send()
    }
    // –ó–¥–µ—Å—å —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø–æ—è–≤–ª—è–ª–∞—Å—å –Ω–æ–≤–∞—è –∏–≥—Ä–∞ —Å –Ω–æ–≤–æ–π —Ç–µ–º–æ–π, —Ä–∞–Ω–¥–æ–º–Ω–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∏–∑ –º–∞—Å—Å–∏–≤–∞ —Ç–µ–º.

    init() {
        let randomTheme: [String] = EmojiMemoryGame.ThemeEmojis.randomElement() ?? []
        self.model = EmojiMemoryGame.createMemoryGame(with: randomTheme)
    }
    
    static func createMemoryGame(with theme: [String]) -> MemoryGame<String> {
        return MemoryGame(numberOfPairsOfCards: theme.count) { pairIndex in
            guard let currentTheme = ThemeEmojis.first(where: { $0.indices.contains(pairIndex)}) else{
                return "‚ÅâÔ∏è"
            }
            return currentTheme[pairIndex]
        }
    }
        
    @Published private var model: MemoryGame<String>
    
    

    var cards: Array<MemoryGame<String>.Card> {
        return model.cards
    }
    
    // MARK: - Intents
    
    func shuffle(){
        model.shuffle()
        objectWillChange.send()
    }
    // –§—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –ø–µ—Ä–µ–º–µ—à–∏–≤–≤–µ—Ç –∫–∞—Ä—Ç—ã.

    func choose(_ card: MemoryGame<String>.Card){
        model.choose(card)
    }
}
